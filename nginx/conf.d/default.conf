server {
    listen 88;
    server_name localhost.com;  # 替换成您的域名或IP地址

    root /etc/nginx/dist;
 
    # # 開啟 gzip 功能
    # gzip on;
    # # 開啟 gzip 靜態壓縮功能
    # gzip_static on;
    # # 设置压缩所需要的缓冲区大小，以4k为单位，如果文件为7k则申请2*4k的缓冲区
    # gzip_buffers 4 16k;
    # # gzip http 版本
    # gzip_http_version 1.1;
    # # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间
    # gzip_comp_level 5;
    # # 进行压缩的文件类型
    # gzip_types text/plain application/javascript text/css application/xml;
    # # 是否在http header中添加Vary: Accept-Encoding，建议开启
    # gzip_vary on;

    # types {
    #     text/html html htm;  # 添加HTML文件的MIME类型
    #     application/javascript js mjs;
    # }

    gzip on;
    gzip_static on;
    gzip_types application/javascript text/css;

    # gzip_min_length 1024;
    # gzip_buffers 4 16k;
    # gzip_comp_level 2;
    # gzip_types *;
    # gzip_vary on;

    # gzip_proxied any;

    location / {
        index index.html index.php;
    }
}

server {
    listen 81;
    server_name localhost;

    location /serimg/ {
        alias /etc/nginx/images/;
    }

    location / {
        proxy_pass http://10.140.0.2:3000; #正式
        # proxy_pass http://172.20.10.2:3000; #測試
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # location /serimg/ {
    #     root /etc/nginx/images;
    #     try_files $uri $uri/ @image_rewrite;
    # }

    # location @image_rewrite {
    #     rewrite ^/serimg/(.*)$ /$1 last;
    # }

    # 将 HTTP 请求重定向到 HTTPS
    # location / {
    #     return 301 https://$host$request_uri;
    # }
}

server {
    listen 82;
    server_name localhost;

    location / {
        proxy_pass http://10.140.0.2:8080; #正式
        # proxy_pass http://172.20.10.2:8080; #測試
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /ws {
        proxy_pass http://10.140.0.2:8080; #正式
        # proxy_pass http://172.20.10.2:8080; #測試
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

}

server {
    listen 80;
    server_name localhost;

    location /pay/result {
        proxy_pass http://10.140.0.2:8080; #正式
        # proxy_pass http://172.20.10.2:8080; #測試
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}

server {
    listen 443 ssl;
    server_name localhost;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # 这里可以添加其他 SSL/TLS 相关的配置

    location / {
        proxy_pass http://10.140.0.2:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /pay/result {
        proxy_pass http://10.140.0.2:8080; #正式
        # proxy_pass http://172.20.10.2:8080; #測試
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}