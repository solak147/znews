definitions:
  model.Login:
    properties:
      account:
        example: kevin@gmail.com
        type: string
      password:
        example: "123456"
        type: string
    type: object
  model.ProfileSave:
    properties:
      introduction:
        example: 我有 8000 名部下
        type: string
      name:
        example: 桐谷和人
        type: string
      password:
        example: "123456"
        type: string
      phone:
        example: "0999999999"
        type: string
      zipcode:
        example: "200"
        type: string
    type: object
  model.RegisterStep1:
    properties:
      email:
        example: kevin@gmail.com
        type: string
    type: object
  model.RegisterStep3:
    properties:
      account:
        example: kevin@gmail.com
        type: string
      email:
        example: kevin@gmail.com
        type: string
      introduction:
        example: 我有 8000 名部下
        type: string
      name:
        example: 桐谷和人
        type: string
      password:
        example: "123456"
        type: string
      phone:
        example: "0999999999"
        type: string
      zipcode:
        example: "200"
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: kevin
  description: Gin swagger
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Gin swagger
  version: 1.8.10
paths:
  /member/login:
    post:
      parameters:
      - description: 登入成功回傳 token
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 登入
      tags:
      - user
  /member/profile/{id}:
    get:
      parameters:
      - default: ”
        description: 帳號
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GetProfile
      tags:
      - user
  /member/registerStep1:
    post:
      parameters:
      - description: 檢查帳號是否已存在
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/model.RegisterStep1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: 註冊 Step1
      tags:
      - user
  /member/registerStep3:
    post:
      parameters:
      - description: 註冊帳號
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/model.RegisterStep3'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: 註冊 Step3
      tags:
      - user
  /profile/save:
    post:
      parameters:
      - description: 修改成功回傳 boolean
        in: body
        name: MyAccount
        required: true
        schema:
          $ref: '#/definitions/model.ProfileSave'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: 個人資料儲存
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
